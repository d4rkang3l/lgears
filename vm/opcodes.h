#ifndef OPCODES_H
#define OPCODES_H

/* Generated by gen-headers.scm, do not edit. */

#define OP_CASE(code) case code: return #code

#define LOAD_FUNC	0x0	/* Load function local to module */
#define LOAD_CLOSURE	0x1	/* Make closure on heap */
#define LOAD_LOCAL	0x2	/* Load object from frame-local area */
#define LOAD_BIND	0x3	/* Load object form binding */
#define LOAD_CONST	0x4	/* Load object from module constant area */
#define PUSH_BOOL	0x5	/* Push boolean value */
#define PUSH_NULL	0x6	/* Load built-in constant */
#define LOAD_IMPORT	0x7	/* Load object from module import table */
#define JUMP_IF_FALSE	0x8	/* Jump if false */
#define JUMP_IF_TRUE	0x9	/* Jump if true */
#define JUMP_FORWARD	0xa	/* Jump forward */
#define FUNC_CALL	0xb	/* Call function */
#define SET_LOCAL	0xc	/* Assign new value to local binding */
#define SET_BIND	0xd	/* Asign new value to non-local binding */

#define OT_FIXNUM	0x0	/* Fixed number */
#define OT_CHARACTER	0x1	/* Character */
#define OT_STRING	0x2	/* String */
#define OT_SYMBOL	0x3	/* Symbol */

static inline const char* opcode_name(int code)
{
	switch (code) {
		OP_CASE(LOAD_FUNC);
		OP_CASE(LOAD_CLOSURE);
		OP_CASE(LOAD_LOCAL);
		OP_CASE(LOAD_BIND);
		OP_CASE(LOAD_CONST);
		OP_CASE(PUSH_BOOL);
		OP_CASE(PUSH_NULL);
		OP_CASE(LOAD_IMPORT);
		OP_CASE(JUMP_IF_FALSE);
		OP_CASE(JUMP_IF_TRUE);
		OP_CASE(JUMP_FORWARD);
		OP_CASE(FUNC_CALL);
		OP_CASE(SET_LOCAL);
		OP_CASE(SET_BIND);
	}
	return "unknown";
}

static inline const char* object_type_name(int code)
{
	switch (code) {
		OP_CASE(OT_FIXNUM);
		OP_CASE(OT_CHARACTER);
		OP_CASE(OT_STRING);
		OP_CASE(OT_SYMBOL);
	}
	return "unknown";
}

#endif
