#!r6rs
(import (rnrs)
		(slib format)
		(opcode))

;;;
;;; It's ugly, I know :\
;;;

(let* ([header (cadr (command-line))]
	   [port (open-file-output-port header
									(file-options no-fail)
									(buffer-mode block)
									(native-transcoder))])
  (display (format "Generating header ~a ..." header))

  (display "#ifndef OPCODES_H\n#define OPCODES_H\n\n" port)
  (display "/* Generated by gen-header.scm, do not edit. */\n\n" port)
  (oplist-for-each (lambda (idx op)
					 (display (format "#define ~a\t~a\t/* ~a */\n" (car op) idx (cdr op)) port))
				   oplist)
  (display "\n#define OP_CASE(code) case code: return #code" port)
  (display "\n\nconst char* opcode_name(int code)\n{\n" port)
  (display "\tswitch (code) {\n" port)
  (for-each (lambda (op)
			  (display (format "\t\tOP_CASE(~a);\n" (car op)) port))
			oplist)
  (display "\t}\n" port)
  (display "\treturn \"unknown\";\n}\n\n#endif" port)

  (newline)
  (close-port port))
